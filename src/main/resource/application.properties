query=urltest
#Spring Boot的默认配置
#参数enabled默认为true即允许附件上传
spring.servlet.multipart.enabled=true 
#file-size-threshold限定了当上传文件超过一定长度时，就先写到临时文件里这里有助于上传文件不占用过多的内存，单位是MB或者KB，默认是0即不限定阈值
spring.servlet.multipart.file-size-threshold=0
#location指的是临时文件的存放目录，如果不设定，则是Web服务器提供的一个临时目录
spring.servlet.multipart.location=
#max-flie-size属性指定了单个文件的最大长度默认是1MB
spring.servlet.multipart.max-file-size=1MB
#max-request-size属性说明单次HTTP请求上传的最大长度默认是1MB
spring.servlet.multipart.max-request-size=10MB
#resolve-lazily表示当文件和参数被访问的时候在解析成文件
spring.servlet.multipart.resolve-lazily=false
##################配置连接数据库的基本信息######################
#连接的url
spring.datasource.url=jdbc:mysql://localhost:3306/spring_boot_example?userUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
#数据库用户名
spring.datasource.username=root
#密码
spring.datasource.password=root
#驱动
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#########################hibernate的配置###########################
#自动检查表结构
spring.jpa.hibernate.ddl-auto=none
#格式化SQL
spring.jpa.show-sql=true
#########################Spring boot的配置###########################
#服务器监听端口
server.port=8083
#命令行中指定启动端口
#--server.port=9000
#服务器IP绑定地址，如果你的主机上有多个网卡，可以绑定一个IP地址
server.address=
#会话过期时间，以秒为单位
server.session.timeout=1800
#服务器出错后的处理路径/error
server.error.path=/error
#Springboot应用上下文默认为/
server.servlet.contextpath=/
###########以上配置参考Spring Boot官网附录 A:Common application properties#################
###############server.tomcat.*包含了Tomcat的相关配置，较为重要的配置如下####################
#打开Tomcat访问日志
#server.tomcat.accesslog.enabled=true
#访问日志所在的目录
#server.tomcat.accesslog.directory=logs
#允许Http请求缓存到请求队列的最大个数，默认不限制
#server.tomcat.accept-count=
#最大连接数，默认不限制，如果一旦连接数到达，剩下的连接将会保存到请求缓存队列里，也就是accept-count指定队列
#server.tomcat.max-connections=
#最大工作线程数
#server.tomcat.max-threads=
#Http POST 内容最大长度，默认不限制
#server.tomcat.max-http-post-size
##################server.undertow.*包含了undertow相关配置，较为重要的配置如下：
#打开undertow日志默认为false
server.undertow.accesslog.enabled=true
#访问日志所在目录
server.undertow.accesslog.dir=logs
#创建工作线程的I/O线程，默认为2或者CPU的个数
server.undertow.io-threads=4
#工作线程个数，默认为I/O线程个数的8倍
server.undertow.work-threads=32
#HTTP POST内容最大长度，默认不限制
server.undertow.max-http-post-size=0
###############server.jetty.*包含了jetty的相关配置，较为重要的配置如下
#打开jetty日志默认为false
#server.jetty.accesslog.enabled=true
#访问日志所在目录
#server.jetty.accesslog.dir=logs
#acceptors线程个数，用来接收访问请求，相当于工作线程
#server.jetty.acceptors=
#selectors线程个数，和CPU个数相关，默认是可用（CPU+1）/2，用于分配请求给工作线程
#server.jetty.selectors=
#######################配置启动信息，启动信息可以在classpath下面放置banner.txt或者banner.gif(png,jpg)当服务器启动时会将图片转换成ASCII码作为启动信息输出
#设置启动输出信息的字符集
banner.charset=UTF-8
#如果是图片的话可以是jpg/png
banner.location=classpath:banner.txt 
#图片宽度，这里是指转为字符的个数，越多越清楚
banner.image.width=1000000
#图片长度
banner.image.height=76
#图片与左边的边距，默认是2个字符
banner.image.margin=2
###########日志配置
#日志的级别有ERROR、WARN、INFO、DEBUG和TRACE
logging.level.root=info
#org包下的日志级别
logging.level.org=warn
#com.yourcorp下的级别
logging.level.com.yourcorp=debug
#Spring Boot默认并未输出日志到文件，可以配置日志输出到springboot.log文件下面
logging.file=springboot.log
#指定日志的输出路径
logging.path=e:/
################Spring Boot 支持对控制台日志输出和文件输出进行格式化控制，代码如下(仅试用内置的logback)
#%date表示日志发生的时间，HH:mm:ss输出时分秒，比较合适用于控制台查看，ISO8601则是标准日期输出，相当于yyyy-MM-dd HH:mm:ss.SSS
#%logger 用于输出Logger的名称，包名加类名，{n}限定了输出长度，如果输出长度不够尽可能显示类名，压缩包名
#%thread当前线程名
#%M 日志发生时的名字
#%L 日志调用所在的代码行，线上运行时不建议使用此参数，因为获取代码行对性能有消耗
#%m 日志信息
#%n 日志换行
logging.pattern.console=%level %date{HH:mm:ss} %logger{20} . %M %L :%m%n
logging.pattern.file=%level %date{ISO8601} [%thread] %logger{20}.%M %L :%m%n
######Spring Boot支持多种日志框架，如Log4j2、LogBack、Java Util Logging等，但建议使用内置的LogBack即可
######也可以通过在resource目录下面使用logback.xmlhuozhelogback-spring.xml来对logback进行更详细的配置